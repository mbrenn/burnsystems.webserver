//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.18010
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BurnSystems.WebServer {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Localization_WebServer {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Localization_WebServer() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BurnSystems.WebServer.Localization_WebServer", typeof(Localization_WebServer).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die HTTP-Präfix: {0} ähnelt.
        /// </summary>
        internal static string AddedPrefix {
            get {
                return ResourceManager.GetString("AddedPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sessions werden aufgeräumt. ähnelt.
        /// </summary>
        internal static string CollectingSessions {
            get {
                return ResourceManager.GetString("CollectingSessions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap d {
            get {
                object obj = ResourceManager.GetObject("d", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap d1 {
            get {
                object obj = ResourceManager.GetObject("d1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /*
        /// * Date Format 1.2.3
        /// * (c) 2007-2009 Steven Levithan &lt;stevenlevithan.com&gt;
        /// * MIT license
        /// *
        /// * Includes enhancements by Scott Trenda &lt;scott.trenda.net&gt;
        /// * and Kris Kowal &lt;cixar.com/~kris.kowal/&gt;
        /// *
        /// * Accepts a date, a mask, or a date and a mask.
        /// * Returns a formatted version of the given date.
        /// * The date defaults to the current date/time.
        /// * The mask defaults to dateFormat.masks.default.
        /// */
        ///
        ///define(function()
        ///{
        ///	var dateFormat = function () {
        ///		var	token = /d{1,4}|m{1,4}|yy(?:yy)?|( [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string DateFormat {
            get {
                return ResourceManager.GetString("DateFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /*
        /// * Date Format 1.2.3
        /// * (c) 2007-2009 Steven Levithan &lt;stevenlevithan.com&gt;
        /// * MIT license
        /// *
        /// * Includes enhancements by Scott Trenda &lt;scott.trenda.net&gt;
        /// * and Kris Kowal &lt;cixar.com/~kris.kowal/&gt;
        /// *
        /// * Accepts a date, a mask, or a date and a mask.
        /// * Returns a formatted version of the given date.
        /// * The date defaults to the current date/time.
        /// * The mask defaults to dateFormat.masks.default.
        /// */
        ///
        ///define(function()
        ///{
        ///	var dateFormat = function () {
        ///		var	token = /d{1,4}|m{1,4}|yy(?:yy)?|( [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string DateFormatDebug {
            get {
                return ResourceManager.GetString("DateFormatDebug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot;
        ///       &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;
        ///&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
        ///	&lt;head&gt;
        ///		&lt;title&gt;BurnSystems Webserver&lt;/title&gt;
        ///		&lt;style type=&quot;text/css&quot;&gt;		
        ///			body
        ///			{
        ///				background-color: #00007F;
        ///				color: #FFFFFF;
        ///				margin: 20px;
        ///				font-family: &quot;Courier New&quot;, Courier, monospace
        ///			}
        ///		&lt;/style&gt;
        ///	&lt;/head&gt;
        ///	&lt;body&gt;
        ///		&lt;h1&gt;@Model.Title&lt;/h1&gt;
        ///		&lt;p&gt;@Model.Url&lt;/p&gt;
        ///		&lt;p&gt;@Model.Message&lt;/p&gt;
        ///		@if(!string.IsNullOrE [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ausnahme während des Listen-Vorgangs: {0} ähnelt.
        /// </summary>
        internal static string ExceptionDuringListening {
            get {
                return ResourceManager.GetString("ExceptionDuringListening", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ausnahme während WebRequest &apos;{0}&apos;: {1} ähnelt.
        /// </summary>
        internal static string ExceptionDuringWebRequest {
            get {
                return ResourceManager.GetString("ExceptionDuringWebRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Das Hochladen von Dateien wird nicht unterstützt. ähnelt.
        /// </summary>
        internal static string FileUploadNotSupported {
            get {
                return ResourceManager.GetString("FileUploadNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Es wurde bereits ein Inhalt versandt. Ein weiteres Versenden ist nicht zulässig. ähnelt.
        /// </summary>
        internal static string FinishedSending {
            get {
                return ResourceManager.GetString("FinishedSending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Beim Starten des Webservers ist ein Fehler aufgetreten. Überprüfen Sie bitte ob folgende Dinge erfüllt sind:
        ///- Programm läuft mit Administratorrechte
        ///- Die angeforderte Website wird bereits von einer anderen Anwendung belegt.
        ///Die konkrete Fehlermeldung lautet: {0} ähnelt.
        /// </summary>
        internal static string HttpListenerException {
            get {
                return ResourceManager.GetString("HttpListenerException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Das übertragene Formular wurde nicht erkannt &apos;multipart/form-data&apos; ähnelt.
        /// </summary>
        internal static string InvalidMultipart {
            get {
                return ResourceManager.GetString("InvalidMultipart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /*! jQuery v@1.8.1 jquery.com | jquery.org/license */
        ///(function(a,b){function G(a){var b=F[a]={};return p.each(a.split(s),function(a,c){b[c]=!0}),b}function J(a,c,d){if(d===b&amp;&amp;a.nodeType===1){var e=&quot;data-&quot;+c.replace(I,&quot;-$1&quot;).toLowerCase();d=a.getAttribute(e);if(typeof d==&quot;string&quot;){try{d=d===&quot;true&quot;?!0:d===&quot;false&quot;?!1:d===&quot;null&quot;?null:+d+&quot;&quot;===d?+d:H.test(d)?p.parseJSON(d):d}catch(f){}p.data(a,c,d)}else d=b}return d}function K(a){var b;for(b in a){if(b===&quot;data&quot;&amp;&amp;p.isEmptyObject(a[b]))continue;if(b!==&quot;toJSON&quot;)re [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string JQuery {
            get {
                return ResourceManager.GetString("JQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /**
        /// * Cookie plugin
        /// *
        /// * Copyright (c) 2006 Klaus Hartl (stilbuero.de)
        /// * Dual licensed under the MIT and GPL licenses:
        /// * http://www.opensource.org/licenses/mit-license.php
        /// * http://www.gnu.org/licenses/gpl.html
        /// *
        /// */
        ///
        ////**
        /// * Create a cookie with the given name and value and other optional parameters.
        /// *
        /// * @example $.cookie(&apos;the_cookie&apos;, &apos;the_value&apos;);
        /// * @desc Set the value of a cookie.
        /// * @example $.cookie(&apos;the_cookie&apos;, &apos;the_value&apos;, { expires: 7, path: &apos;/&apos;, domain: &apos;jquery.com&apos;, secure [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string JQueryCookie {
            get {
                return ResourceManager.GetString("JQueryCookie", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /*!
        /// * jQuery JavaScript Library v1.8.1
        /// * http://jquery.com/
        /// *
        /// * Includes Sizzle.js
        /// * http://sizzlejs.com/
        /// *
        /// * Copyright 2012 jQuery Foundation and other contributors
        /// * Released under the MIT license
        /// * http://jquery.org/license
        /// *
        /// * Date: Thu Aug 30 2012 17:17:22 GMT-0400 (Eastern Daylight Time)
        /// */
        ///(function( window, undefined ) {
        ///var
        ///	// A central reference to the root jQuery(document)
        ///	rootjQuery,
        ///
        ///	// The deferred used on DOM ready
        ///	readyList,
        ///
        ///	// Use the correct document accordingly with wind [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string JQueryDebug {
            get {
                return ResourceManager.GetString("JQueryDebug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /*
        /// * jQuery Hotkeys Plugin
        /// * Copyright 2010, John Resig
        /// * Dual licensed under the MIT or GPL Version 2 licenses.
        /// *
        /// * Based upon the plugin by Tzury Bar Yochay:
        /// * http://github.com/tzuryby/hotkeys
        /// *
        /// * Original idea by:
        /// * Binny V A, http://www.openjs.com/scripts/events/keyboard_shortcuts/
        ///*/
        ///
        ///(function(jQuery){
        ///	
        ///	jQuery.hotkeys = {
        ///		version: &quot;0.8&quot;,
        ///
        ///		specialKeys: {
        ///			8: &quot;backspace&quot;, 9: &quot;tab&quot;, 13: &quot;return&quot;, 16: &quot;shift&quot;, 17: &quot;ctrl&quot;, 18: &quot;alt&quot;, 19: &quot;pause&quot;,
        ///			20: &quot;capslock&quot;, 27:  [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string JQueryHotkeys {
            get {
                return ResourceManager.GetString("JQueryHotkeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /*
        /// * jsTree default theme 1.0
        /// * Supported features: dots/no-dots, icons/no-icons, focused, loading
        /// * Supported plugins: ui (hovered, clicked), checkbox, contextmenu, search
        /// */
        ///
        ///.jstree-default li, 
        ///.jstree-default ins { background-image:url(&quot;d.png&quot;); background-repeat:no-repeat; background-color:transparent; }
        ///.jstree-default li { background-position:-90px 0; background-repeat:repeat-y; }
        ///.jstree-default li.jstree-last { background:transparent; }
        ///.jstree-default .jstree-open &gt; ins { background [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string JSTree_CSS {
            get {
                return ResourceManager.GetString("JSTree_CSS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mail &apos;{0}&apos; wurde zu &apos;{1}&apos; versendet.  ähnelt.
        /// </summary>
        internal static string MailSent {
            get {
                return ResourceManager.GetString("MailSent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximale Länge des Requests überschritten: {0} Bytes (erlaubt: {1} Bytes) ähnelt.
        /// </summary>
        internal static string MaximumPostLengthExceeded {
            get {
                return ResourceManager.GetString("MaximumPostLengthExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /*
        /// RequireJS 2.0.6 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.
        /// Available via the MIT or new BSD license.
        /// see: http://github.com/jrburke/requirejs for details
        ///*/
        ///var requirejs,require,define;
        ///(function(Z){function x(b){return J.call(b)===&quot;[object Function]&quot;}function E(b){return J.call(b)===&quot;[object Array]&quot;}function o(b,e){if(b){var f;for(f=0;f&lt;b.length;f+=1)if(b[f]&amp;&amp;e(b[f],f,b))break}}function M(b,e){if(b){var f;for(f=b.length-1;f&gt;-1;f-=1)if(b[f]&amp;&amp;e(b[f],f,b))break}}function y(b,e){f [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string RequireJS {
            get {
                return ResourceManager.GetString("RequireJS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die /** vim: et:ts=4:sw=4:sts=4
        /// * @license RequireJS 2.0.6 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.
        /// * Available via the MIT or new BSD license.
        /// * see: http://github.com/jrburke/requirejs for details
        /// */
        /////Not using strict: uneven strict support in browsers, #392, and causes
        /////problems with requirejs.exec()/transpiler plugins that may not be strict.
        ////*jslint regexp: true, nomen: true, sloppy: true */
        ////*global window, navigator, document, importScripts, jQuery, setTimeout, opera */
        ///
        ///va [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string RequireJSDebug {
            get {
                return ResourceManager.GetString("RequireJSDebug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Der Webserver wurde bereits gestartet. ähnelt.
        /// </summary>
        internal static string ServerAlreadyStarted {
            get {
                return ResourceManager.GetString("ServerAlreadyStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Der Webserver wurde nicht gestartet.  ähnelt.
        /// </summary>
        internal static string ServerNotStarted {
            get {
                return ResourceManager.GetString("ServerNotStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sessions werden eingeladen. ähnelt.
        /// </summary>
        internal static string SessionsLoading {
            get {
                return ResourceManager.GetString("SessionsLoading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Beim Einladen der Sessions wurde folgende Ausnahme gefangen: {0} ähnelt.
        /// </summary>
        internal static string SessionsLoadingException {
            get {
                return ResourceManager.GetString("SessionsLoadingException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sessions werden gespeichert. ähnelt.
        /// </summary>
        internal static string SessionsStoring {
            get {
                return ResourceManager.GetString("SessionsStoring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Beim Speichern der Sessions wurde folgende Ausnahme gefangen: {0} ähnelt.
        /// </summary>
        internal static string SessionsStoringException {
            get {
                return ResourceManager.GetString("SessionsStoringException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mail zu &apos;{0}&apos; wird wegen inaktivem MailSender nicht gesendet.  ähnelt.
        /// </summary>
        internal static string SkippingMail {
            get {
                return ResourceManager.GetString("SkippingMail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap throbber {
            get {
                object obj = ResourceManager.GetObject("throbber", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
